name: storage-adapter-Continuous integration

on:
  push:
    branches: [main]
    
env:
  IMAGE_NAME: storage-adapter 
  REGISTRY: ghcr.io/ajaygithub39
      
jobs:
  CI: 
    name: continous integration for storage_adapter
    runs-on: ubuntu-latest
    
    steps:
    - name: checkout source code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    
#     - name: Git
#       run: |
#         git config --global user.email "ajay.raavi90@gmail.com"
#         git config --global user.name "Ajay kumar"
#         git tag -a v3.0.3 -m "version 0.0.0"
#         git push origin v3.0.3

    - name: semantic versioning
      id: versioning
      uses: PaulHatch/semantic-version@v4.0.2
      with:
        branch: main
        tag_prefix: "v"
        major_pattern: "BREAKING CHANGE:"
        minor_pattern: "feat:"
        format: "v${major}.${minor}.${patch}-${increment}"

    - name: Setup .NET SDK version
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.x
    - name: Restore
      run: dotnet restore src/WebService/WebService.csproj
    - name: Build with dotnet
      run: dotnet build src/WebService/WebService.csproj --configuration Release
    - name: create a directory
      run: mkdir -p /home/runner/work/platform_storage_adapter/platform_storage_adapter/scripts/docker/webservice
    - name: publish dotnet
      run: dotnet publish src/WebService --configuration Release -o /home/runner/work/platform_storage_adapter/platform_storage_adapter/scripts/docker/webservice
          
    - name: Log in to the GitHub Container registry
      uses: redhat-actions/podman-login@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Buildah Action
      id: build-image
      uses: redhat-actions/buildah-build@v2
      with:
        image: ${{ env.IMAGE_NAME }}
        tags: ${{ steps.versioning.outputs.version }}
        containerfiles: |
          ./scripts/docker/
          
    - name: Push to GitHub Container Repository
      id: push-to-ghcr
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: ${{ env.REGISTRY }}
        
    - name: Create Release
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.github_token }}
      with:
        tag_name: ${{ steps.versioning.outputs.version }}
        release_name: ${{ steps.versioning.outputs.version }}
        prerelease: true
        
    
